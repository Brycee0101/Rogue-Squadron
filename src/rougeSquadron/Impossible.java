/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package rougeSquadron;
import java.awt.Cursor;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;
//import javax.swing.Timer;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
/**
 *
 * @author Notorious
 */

public class Impossible extends javax.swing.JFrame {
//    Timer timer = new Timer(2000, new ActionListener(){
//        public void actionPerformed(ActionEvent evt){
//            Overview ov = new Overview();
//            ov.setVisible(true);
//            setVisible(false);
//        }
//    });
    
    /**
     * Creates new form Shoot
     */
    Timer t = new Timer();
    Toolkit toolkit = Toolkit.getDefaultToolkit();
    Image img = toolkit.getImage("snip.png");
    Point point = new Point(0,5);
    Cursor cursor = toolkit.createCustomCursor(img, point, "Cursor");
    int dur=0;
    Play play;
    public Impossible() {
        super("Rogue Squadron");
        initComponents();
        CustomCursor();
        this.setResizable(false);
        this.setSize(503,371);
        this.setLocationRelativeTo(null);
        TimerTask tt = new TimerTask(){
        public void run(){
            JOptionPane.showMessageDialog(rootPane, "Final Score: " + score, "Time's UP",JOptionPane.PLAIN_MESSAGE);          
            t.cancel();
        }
    };
    t.schedule(tt,5000);
    }
    Random rand = new Random();
    Integer score=0;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        target = new javax.swing.JLabel();
        scoredisp = new javax.swing.JLabel();
        space = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        gameMenu = new javax.swing.JMenu();
        newGame = new javax.swing.JMenuItem();
        endCurrent = new javax.swing.JMenuItem();
        exitGame = new javax.swing.JMenuItem();
        settingsMenu = new javax.swing.JMenu();
        difficultyMenu = new javax.swing.JMenu();
        easyMode = new javax.swing.JMenuItem();
        mediumMode = new javax.swing.JMenuItem();
        hardMode = new javax.swing.JMenuItem();
        impossibleMode = new javax.swing.JMenuItem();
        aboutMenu = new javax.swing.JMenu();
        aboutGame = new javax.swing.JMenuItem();
        developersInfo = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        instructionsHelp = new javax.swing.JMenuItem();
        difficultiesHelp = new javax.swing.JMenuItem();
        controlsHelp = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        target.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rougeSquadron/img/wst.png"))); // NOI18N
        target.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                targetMouseClicked(evt);
            }
        });
        getContentPane().add(target);
        target.setBounds(220, 150, 50, 50);

        scoredisp.setFont(new java.awt.Font("Impact", 1, 18)); // NOI18N
        scoredisp.setForeground(new java.awt.Color(255, 255, 0));
        scoredisp.setText("SCORE: ");
        getContentPane().add(scoredisp);
        scoredisp.setBounds(10, 10, 90, 23);

        space.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rougeSquadron/img/bg.gif"))); // NOI18N
        getContentPane().add(space);
        space.setBounds(0, 0, 500, 350);

        gameMenu.setText("Game");
        gameMenu.setToolTipText("");

        newGame.setText("New Game");
        newGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameActionPerformed(evt);
            }
        });
        gameMenu.add(newGame);

        endCurrent.setText("End Current");
        endCurrent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endCurrentActionPerformed(evt);
            }
        });
        gameMenu.add(endCurrent);

        exitGame.setText("Exit Game");
        exitGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitGameActionPerformed(evt);
            }
        });
        gameMenu.add(exitGame);

        jMenuBar1.add(gameMenu);

        settingsMenu.setText("Settings");

        difficultyMenu.setText("Difficulties");

        easyMode.setText("Easy");
        easyMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                easyModeActionPerformed(evt);
            }
        });
        difficultyMenu.add(easyMode);

        mediumMode.setText("Medium");
        mediumMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mediumModeActionPerformed(evt);
            }
        });
        difficultyMenu.add(mediumMode);

        hardMode.setText("Hard");
        hardMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hardModeActionPerformed(evt);
            }
        });
        difficultyMenu.add(hardMode);

        impossibleMode.setText("Impossible");
        impossibleMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                impossibleModeActionPerformed(evt);
            }
        });
        difficultyMenu.add(impossibleMode);

        settingsMenu.add(difficultyMenu);

        jMenuBar1.add(settingsMenu);

        aboutMenu.setText("About");

        aboutGame.setText("About");
        aboutGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutGameActionPerformed(evt);
            }
        });
        aboutMenu.add(aboutGame);

        developersInfo.setText("Developers");
        developersInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                developersInfoActionPerformed(evt);
            }
        });
        aboutMenu.add(developersInfo);

        jMenuBar1.add(aboutMenu);

        helpMenu.setText("Help");

        instructionsHelp.setText("Instructions");
        instructionsHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instructionsHelpActionPerformed(evt);
            }
        });
        helpMenu.add(instructionsHelp);

        difficultiesHelp.setText("Difficulties");
        difficultiesHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                difficultiesHelpActionPerformed(evt);
            }
        });
        helpMenu.add(difficultiesHelp);

        controlsHelp.setText("Controls");
        controlsHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controlsHelpActionPerformed(evt);
            }
        });
        helpMenu.add(controlsHelp);

        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void targetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_targetMouseClicked
        int upperboundx = 400;
        int upperboundy = 280;
        int posx = rand.nextInt(upperboundx-1);
        int posy = rand.nextInt(upperboundy-1);
        target.setLocation(posx, posy);
        score++;
        scoredisp.setText("SCORE: " + score);
    }//GEN-LAST:event_targetMouseClicked

    private void exitGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitGameActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Final Score: " + score, "Game Over",JOptionPane.PLAIN_MESSAGE); 
        System.exit(0);
    }//GEN-LAST:event_exitGameActionPerformed

    private void newGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameActionPerformed
        Play play = new Play();
        play.setVisible(true);
        t.cancel();
        this.dispose();
    }//GEN-LAST:event_newGameActionPerformed

    private void instructionsHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instructionsHelpActionPerformed
        Instructions inst = new Instructions();
        inst.setVisible(true);
        t.cancel();
    }//GEN-LAST:event_instructionsHelpActionPerformed

    private void endCurrentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endCurrentActionPerformed
       JOptionPane.showMessageDialog(rootPane, "Final Score: " + score, "Game Over",JOptionPane.PLAIN_MESSAGE);
       Play play = new Play();
       play.setVisible(true);
       t.cancel();
       dispose();
    }//GEN-LAST:event_endCurrentActionPerformed

    private void controlsHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_controlsHelpActionPerformed
        Controls cont = new Controls();
        cont.setVisible(true);
    }//GEN-LAST:event_controlsHelpActionPerformed

    private void aboutGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutGameActionPerformed
       About abt = new About();
       abt.setVisible(true);
       t.cancel();
    }//GEN-LAST:event_aboutGameActionPerformed

    private void developersInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_developersInfoActionPerformed
        Developers dev = new Developers();
        dev.setVisible(true);
        t.cancel();
    }//GEN-LAST:event_developersInfoActionPerformed

    private void difficultiesHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_difficultiesHelpActionPerformed
        Difficulties diff = new Difficulties();
        diff.setVisible(true);
        t.cancel();
    }//GEN-LAST:event_difficultiesHelpActionPerformed

    private void mediumModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mediumModeActionPerformed
        Medium med = new Medium();
        med.setVisible(true);
        t.cancel();
        dispose();
    }//GEN-LAST:event_mediumModeActionPerformed

    private void easyModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_easyModeActionPerformed
        Easy ease = new Easy();
        ease.setVisible(true);
        t.cancel();
        dispose();
    }//GEN-LAST:event_easyModeActionPerformed

    private void hardModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hardModeActionPerformed
       Hard hard = new Hard();
        hard.setVisible(true);
        t.cancel();
        dispose();
    }//GEN-LAST:event_hardModeActionPerformed

    private void impossibleModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_impossibleModeActionPerformed
        Impossible impos = new Impossible();
        impos.setVisible(true);
        t.cancel();
        dispose();
    }//GEN-LAST:event_impossibleModeActionPerformed
    
    public void CustomCursor(){
        setCursor(cursor);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Impossible.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Impossible.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Impossible.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Impossible.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Impossible().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutGame;
    private javax.swing.JMenu aboutMenu;
    private javax.swing.JMenuItem controlsHelp;
    private javax.swing.JMenuItem developersInfo;
    private javax.swing.JMenuItem difficultiesHelp;
    private javax.swing.JMenu difficultyMenu;
    private javax.swing.JMenuItem easyMode;
    private javax.swing.JMenuItem endCurrent;
    private javax.swing.JMenuItem exitGame;
    private javax.swing.JMenu gameMenu;
    private javax.swing.JMenuItem hardMode;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem impossibleMode;
    private javax.swing.JMenuItem instructionsHelp;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem mediumMode;
    private javax.swing.JMenuItem newGame;
    private javax.swing.JLabel scoredisp;
    private javax.swing.JMenu settingsMenu;
    private javax.swing.JLabel space;
    private javax.swing.JLabel target;
    // End of variables declaration//GEN-END:variables
}
